"""initial_migration

Revision ID: 6f58f5165f7c
Revises: 
Create Date: 2025-07-28 18:19:28.354275

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f58f5165f7c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.String(length=20), nullable=False, comment='组织ID，雪花算法生成'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='组织名称'),
    sa.Column('code', sa.String(length=20), nullable=False, comment='组织编码，唯一标识'),
    sa.Column('type', sa.Enum('COMPANY', 'DEPARTMENT', 'TEAM', 'GROUP', name='organizationtype'), nullable=False, comment='组织类型'),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='organizationstatus'), nullable=True, comment='组织状态'),
    sa.Column('description', sa.Text(), nullable=True, comment='组织描述'),
    sa.Column('parent_id', sa.String(length=20), nullable=True, comment='父组织ID'),
    sa.Column('level', sa.Integer(), nullable=True, comment='组织层级'),
    sa.Column('path', sa.String(length=500), nullable=True, comment='组织路径，如 "/1/2/3"'),
    sa.Column('manager_id', sa.String(length=20), nullable=True, comment='组织管理员ID'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序字段'),
    sa.Column('address', sa.String(length=255), nullable=True, comment='组织地址'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='联系电话'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='联系邮箱'),
    sa.Column('website', sa.String(length=255), nullable=True, comment='官方网站'),
    sa.Column('logo', sa.String(length=255), nullable=True, comment='组织Logo URL'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活状态，保留兼容性'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_code'), 'organizations', ['code'], unique=True)
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=20), nullable=False, comment='用户ID，雪花算法生成'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名，唯一标识'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='邮箱地址，唯一标识'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='密码哈希值'),
    sa.Column('name', sa.String(length=100), nullable=True, comment='用户真实姓名'),
    sa.Column('avatar', sa.String(length=255), nullable=True, comment='头像URL地址'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='手机号码'),
    sa.Column('position', sa.String(length=100), nullable=True, comment='用户岗位/职位'),
    sa.Column('department', sa.String(length=100), nullable=True, comment='用户所属部门'),
    sa.Column('organization_id', sa.String(length=20), nullable=True, comment='用户所属组织ID'),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'MEMBER', 'USER', name='userrole'), nullable=True, comment='用户角色'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活状态'),
    sa.Column('is_verified', sa.Boolean(), nullable=True, comment='是否已验证邮箱'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('organization_members',
    sa.Column('organization_id', sa.String(length=20), nullable=False, comment='组织ID'),
    sa.Column('user_id', sa.String(length=20), nullable=False, comment='用户ID'),
    sa.Column('position', sa.String(length=100), nullable=True, comment='职位'),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'MEMBER', 'USER', name='memberrole'), nullable=True, comment='成员角色'),
    sa.Column('joined_at', sa.DateTime(), nullable=True, comment='加入时间'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'user_id')
    )
    op.create_table('projects',
    sa.Column('id', sa.String(length=20), nullable=False, comment='项目ID，雪花算法生成'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='项目名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='项目描述'),
    sa.Column('status', sa.Enum('PLANNING', 'ACTIVE', 'ON_HOLD', 'COMPLETED', 'ARCHIVED', name='projectstatus'), nullable=True, comment='项目状态'),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='projectpriority'), nullable=True, comment='项目优先级'),
    sa.Column('start_date', sa.DateTime(), nullable=True, comment='项目开始日期'),
    sa.Column('end_date', sa.DateTime(), nullable=True, comment='项目结束日期'),
    sa.Column('creator_id', sa.String(length=20), nullable=True, comment='项目创建者ID'),
    sa.Column('manager_id', sa.String(length=20), nullable=True, comment='项目管理者ID'),
    sa.Column('organization_id', sa.String(length=20), nullable=True, comment='所属组织ID'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='是否已归档'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('project_members',
    sa.Column('project_id', sa.String(length=20), nullable=False, comment='项目ID'),
    sa.Column('user_id', sa.String(length=20), nullable=False, comment='用户ID'),
    sa.Column('role', sa.String(length=50), nullable=True, comment='成员角色'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'user_id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.String(length=20), nullable=False, comment='任务ID，雪花算法生成'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='任务标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='任务描述'),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'REVIEW', 'DONE', 'CANCELLED', name='taskstatus'), nullable=True, comment='任务状态'),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=True, comment='任务优先级'),
    sa.Column('type', sa.Enum('FEATURE', 'BUG', 'IMPROVEMENT', 'DOCUMENTATION', 'TEST', name='tasktype'), nullable=True, comment='任务类型'),
    sa.Column('project_id', sa.String(length=20), nullable=True, comment='任务所属项目ID'),
    sa.Column('assignee_id', sa.String(length=20), nullable=True, comment='任务负责人ID'),
    sa.Column('reporter_id', sa.String(length=20), nullable=True, comment='任务报告人ID'),
    sa.Column('due_date', sa.DateTime(), nullable=True, comment='任务截止时间'),
    sa.Column('estimated_hours', sa.Integer(), nullable=True, comment='任务预估工时'),
    sa.Column('actual_hours', sa.Integer(), nullable=True, comment='任务实际工时'),
    sa.Column('parent_task_id', sa.String(length=20), nullable=True, comment='父任务ID'),
    sa.Column('tags', sa.String(length=500), nullable=True, comment='任务标签'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('task_attachments',
    sa.Column('id', sa.String(length=20), nullable=False, comment='任务附件ID，雪花算法生成'),
    sa.Column('task_id', sa.String(length=20), nullable=True, comment='任务附件所属任务ID'),
    sa.Column('filename', sa.String(length=255), nullable=False, comment='附件文件名'),
    sa.Column('original_filename', sa.String(length=255), nullable=False, comment='附件原始文件名'),
    sa.Column('file_path', sa.String(length=500), nullable=False, comment='附件文件路径'),
    sa.Column('file_size', sa.Integer(), nullable=True, comment='附件文件大小'),
    sa.Column('content_type', sa.String(length=100), nullable=True, comment='附件文件类型'),
    sa.Column('uploaded_by', sa.String(length=20), nullable=True, comment='附件上传人ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_attachments_id'), 'task_attachments', ['id'], unique=False)
    op.create_table('task_comments',
    sa.Column('id', sa.String(length=20), nullable=False, comment='任务评论ID，雪花算法生成'),
    sa.Column('task_id', sa.String(length=20), nullable=True, comment='评论所属任务ID'),
    sa.Column('user_id', sa.String(length=20), nullable=True, comment='评论用户ID'),
    sa.Column('content', sa.Text(), nullable=False, comment='评论内容'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_comments_id'), 'task_comments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_comments_id'), table_name='task_comments')
    op.drop_table('task_comments')
    op.drop_index(op.f('ix_task_attachments_id'), table_name='task_attachments')
    op.drop_table('task_attachments')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('project_members')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_table('organization_members')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_code'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###